{"version":3,"sources":["components/Stats.js","components/Models.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Stats","props","getJson","a","api","axios","create","baseURL","get","then","res","console","log","data","setState","isLoaded","posted_items","state","error","pyResp","page","legend","is_posted","age","gender","admission_origin","admission_type","admission_diagnosis","admission_procedure","insurance","religion","ethnicity","marital_status","this","orders","orderInfo","map","order","category","count","className","width","height","name","uv","pv","amt","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","React","Component","Models","postJson","e","document","getElementById","options","selectedIndex","value","post","prediction","alert","hospitalization","myChangeHandler","event","nam","target","val","Boolean","length","Form","Group","Control","type","id","as","onChange","selected","disabled","hidden","Button","variant","size","block","onClick","NavBar","Nav","Item","to","Link","href","App","fetch","r","json","stats","catch","err","Container","Row","Col","Navbar","path","component","new","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.804f55e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nclass Stats extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            error: null,\r\n            isLoaded: false,\r\n            pyResp: [],\r\n            page: 0,\r\n            legend: 'stats',\r\n            posted_items: [],\r\n            is_posted: false,\r\n\r\n            age: 50,\r\n            gender: '',\r\n            admission_origin: '',\r\n            admission_type: '',\r\n            admission_diagnosis: '',\r\n            admission_procedure: '',\r\n            insurance: '',\r\n            religion: '',\r\n            ethnicity: '',\r\n            marital_status: '',\r\n        };\r\n    }\r\n    \r\n    getJson = async () => {\r\n      const api = axios.create({\r\n        baseURL: 'http://127.0.0.1:5000/stats/'\r\n      })\r\n      let res = await api.get('/').then(res =>{\r\n        console.log(res.data)\r\n        this.setState({\r\n          isLoaded: true,\r\n          posted_items: res.data\r\n        })\r\n      })\r\n    }\r\n\r\n    \r\n    render (){\r\n    const { error, isLoaded, pyResp, page, legend, age, posted_items, is_posted} = this.state;\r\n    console.log(posted_items)\r\n    console.log(\"----------------------------------------------------------------\")\r\n    console.log(posted_items)\r\n    this.getJson();\r\n    const data = [\r\n      {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n      {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\r\n      {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\r\n      {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n      {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\r\n      {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\r\n      {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n];\r\n    \r\nvar orders = [ { \"name\" : \"chain\", \"description\" : \"necklace chain\", \"status\": \"shipped\"} , {\"name\": \"pen\", \"description\" : \"ball pen\", \"status\": \"shipped\"}, {\"name\": \"book\", \"description\" : \"travel diary\", \"status\": \"delivered\"},{\"name\": \"brush\", \"description\" : \"paint brush\", \"status\": \"delivered\"}];\r\n\r\nconsole.log(orders); \r\nvar orderInfo = orders.map( function(order) {\r\n \r\n     var info = { \"category\": order.category,\r\n                  \"count\": order.count\r\n                 }\r\n     return info;\r\n \r\n});\r\n\r\nconsole.log(orderInfo);\r\n    return(\r\n        <div className=\"App\">\r\n          <h1>Here are some interesting facts about the data</h1>\r\n          <BarChart width={600} height={300} data={data}\r\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n          <CartesianGrid strokeDasharray=\"3 3\"/>\r\n          <XAxis dataKey=\"name\"/>\r\n          <YAxis/>\r\n          <Tooltip/>\r\n          <Legend />\r\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n\r\n          \r\n        </div>\r\n        );\r\n            }\r\n}\r\n\r\nexport default Stats;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Models extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            error: null,\r\n            isLoaded: false,\r\n            pyResp: [],\r\n            page: 0,\r\n            legend: 'stats',\r\n            posted_items: [],\r\n            is_posted: false,\r\n\r\n            age: 50,\r\n            gender: '',\r\n            admission_origin: '',\r\n            admission_type: '',\r\n            admission_diagnosis: '',\r\n            admission_procedure: '',\r\n            insurance: '',\r\n            religion: '',\r\n            ethnicity: '',\r\n            marital_status: '',\r\n        };\r\n    }\r\n    postJson = async () => {\r\n        const api = axios.create({\r\n            baseURL: 'http://127.0.0.1:5000/models/'\r\n        })\r\n        var { age, gender, admission_origin, admission_type, admission_diagnosis, admission_procedure, insurance, religion, ethnicity, marital_status} = this.state;\r\n        \r\n        var e = document.getElementById('gender');\r\n        gender = e.options[e.selectedIndex].value\r\n    \r\n        e = document.getElementById('admission_origin');\r\n        admission_origin = e.options[e.selectedIndex].value\r\n        \r\n        e = document.getElementById('admission_type');\r\n        admission_type = e.options[e.selectedIndex].value\r\n    \r\n        e = document.getElementById('admission_origin');\r\n        admission_origin = e.options[e.selectedIndex].value\r\n    \r\n        e = document.getElementById('admission_diagnosis');\r\n        admission_diagnosis = e.options[e.selectedIndex].value\r\n    \r\n        e = document.getElementById('admission_procedure');\r\n        admission_procedure = e.options[e.selectedIndex].value\r\n    \r\n        e = document.getElementById('insurance');\r\n        insurance = e.options[e.selectedIndex].value\r\n    \r\n        e = document.getElementById('religion');\r\n        religion = e.options[e.selectedIndex].value\r\n        \r\n        e = document.getElementById('ethnicity');\r\n        ethnicity = e.options[e.selectedIndex].value\r\n        \r\n        e = document.getElementById('marital_status');\r\n        marital_status = e.options[e.selectedIndex].value\r\n        \r\n        let res = await api.post('/',{\r\n            \"age\": 12,\r\n            \"gender\": \"M\",\r\n            \"admission_origin\": admission_origin,\r\n            \"admission_type\": admission_type,\r\n            \"admission_diagnosis\" : admission_diagnosis,   \r\n            \"insurance\": insurance,\r\n            \"religion\" : religion,\r\n            \"ethnicity\": ethnicity,\r\n            \"marital_status\": marital_status\r\n        })\r\n        this.state.posted_items = res.data.prediction\r\n        this.state.is_posted = true\r\n        //console.log(res.data)\r\n        alert(this.state.posted_items.map(prediction =>(prediction.hospitalization)));\r\n      }\r\n\r\n    myChangeHandler = (event) => {\r\n      let nam = event.target.name;\r\n      let val = event.target.value;\r\n      this.setState({[nam]: val});\r\n    }\r\n\r\n    render (){\r\n    const { error, isLoaded, pyResp, page, legend, age, posted_items, is_posted} = this.state;\r\n    console.log(posted_items)\r\n    return(\r\n    <div className=\"App\">\r\n          <p>{Boolean(posted_items.length) && posted_items.prediction[0].hospitalization}</p>\r\n          \r\n          <h3>How many days is the patient going to stay?</h3>\r\n          <h3>Fill the data below to find out!</h3>\r\n          <Form.Group>\r\n\r\n            <p>Set age: &nbsp;\r\n            <Form.Control type=\"range\" id='age' type='range' name='age' min=\"0\" max=\"120\" onChange={this.myChangeHandler}/>{age}\r\n            </p>\r\n            <p>Select gender: &nbsp;\r\n            <Form.Control as=\"select\" id='gender' name='gender' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"M\">Male</option>\r\n              <option value=\"F\">Female</option>\r\n            </Form.Control>\r\n            </p>\r\n            <p>Select admission_origin: &nbsp;\r\n            <Form.Control as=\"select\" id='admission_origin' name='admission_origin' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"ADMITTED FROM EMERGENCY\">ADMITTED FROM EMERGENCY</option>\r\n              <option value=\"PHYSICAL REFERRAL\">PHYSICAL REFERRAL</option>\r\n              <option value=\"CLINIC REFERRAL\">CLINIC REFERRAL</option>\r\n              <option value=\"TRANSFER FROM HOSPITAL\">TRANSFER FROM HOSPITAL</option>\r\n              <option value=\"NOT AVAILABLE\">NOT AVAILABLE</option>\r\n            </Form.Control>\r\n            </p>\r\n            <p>Select admission_type: &nbsp;\r\n            <Form.Control as=\"select\" id='admission_type' name='admission_type' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"EMERGENCY\">EMERGENCY</option>\r\n              <option value=\"NEWBORN\">NEWBORN</option>\r\n              <option value=\"ELECTIVE\">ELECTIVE</option>\r\n              <option value=\"URGENT\">URGENT</option>\r\n            </Form.Control>\r\n            </p>\r\n            <p>Select admission_diagnosis: &nbsp;\r\n            <Form.Control as=\"select\" id='admission_diagnosis' name='admission_diagnosis' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"NEWBORN\">NEWBORN</option>\r\n              <option value=\"CORONARY ARTERY DISEASE\">CORONARY ARTERY DISEASE</option>\r\n              <option value=\"GASTROINTESTINAL BLEED\">GASTROINTESTINAL BLEED</option>\r\n              <option value=\"PNEUMONIA\">PNEUMONIA</option>\r\n              <option value=\"SEPSIS\">SEPSIS</option>\r\n              <option value=\"CHEST PAIN\">CHEST PAIN</option>\r\n              <option value=\"CONGESTIVE HEART FAILURE\">CONGESTIVE HEART FAILURE</option>\r\n              <option value=\"AORTIC STENOSIS\">AORTIC STENOSIS</option>\r\n              <option value=\"ALTERED MENTAL STATUS\">ALTERED MENTAL STATUS</option>\r\n              <option value=\"INTRACRANIAL HEMORRHAGE\">INTRACRANIAL HEMORRHAGE</option>\r\n              <option value=\"STROKE\">STROKE</option>\r\n              <option value=\"FEVER\">FEVER</option>\r\n              <option value=\"OTHER\">OTHER </option>\r\n            </Form.Control>\r\n            </p>\r\n            <p>Select admission_procedure: &nbsp;\r\n            <Form.Control as=\"select\" id='admission_procedure' name='admission_procedure' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"Cont inv mec ven 96+ hrs\">Cont inv mec ven 96+ hrs</option>\r\n              <option value=\"Vaccination NEC\">Vaccination NEC</option>\r\n              <option value=\"Aortocor bypas-1 cor art\">Aortocor bypas-1 cor art</option>\r\n              <option value=\"Opn/oth rep aortic valve\">Opn/oth rep aortic valve</option>\r\n              <option value=\"Venous cath NEC\">Venous cath NEC</option>\r\n              <option value=\"Insert endotracheal tube\">Insert endotracheal tube</option>\r\n              <option value=\"Circumcision\">Circumcision</option>\r\n              <option value=\"Entral infus nutrit sub\">Entral infus nutrit sub</option>\r\n              <option value=\"PTCA\">PTCA</option>\r\n              <option value=\"Temporary tracheostomy\">Temporary tracheostomy</option>\r\n              <option value=\"Non-invasive mech vent\">Non-invasive mech vent</option>\r\n              <option value=\"Sm bowel endoscopy NEC\">Sm bowel endoscopy NEC</option>\r\n              <option value=\"Other brain excision\">Other brain excision</option>\r\n              <option value=\"Other\">Other</option>\r\n            </Form.Control> \r\n            </p>\r\n            <p>Select insurance: &nbsp;\r\n            <Form.Control as=\"select\" id='insurance' name='insurance' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"Medicare\">MEDICARE</option>\r\n              <option value=\"Private\">PRIVATE</option>\r\n              <option value=\"Medicaid\">MEDICAID</option>\r\n              <option value=\"Government\">GOVERNMENT</option>\r\n              <option value=\"Self Pay\">SELF PAY</option>\r\n            </Form.Control>\r\n            </p>\r\n            <p>Select religion: &nbsp;\r\n            <Form.Control as=\"select\" id='religion' name='religion' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"CATHOLIC\">CATHOLIC</option>\r\n              <option value=\"ORTHODOX\">ORTHODOX</option>\r\n              <option value=\"JEWISH\">JEWISH</option>\r\n              <option value=\"BUDDHIST\">BUDDHIST</option>\r\n              <option value=\"OTHER\">OTHER</option>\r\n            </Form.Control>\r\n            </p>\r\n            <p>Select ethnicity: &nbsp;\r\n            <Form.Control as=\"select\" id='ethnicity' name='ethnicity' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"WHITE\">WHITE</option>\r\n              <option value=\"BLACK\">BLACK</option>\r\n              <option value=\"ASIAN\">ASIAN</option>\r\n              <option value=\"UKNOWN\">UKNOWN</option>\r\n            </Form.Control>\r\n            </p>\r\n            <p>Select marital_status: &nbsp;\r\n            <Form.Control as=\"select\" id='marital_status' name='marital_status' onChange={this.myChangeHandler}>\r\n              <option value=\"\" selected disabled hidden></option>\r\n              <option value=\"MARRIED\">MARRIED</option>\r\n              <option value=\"SINGLE\">SINGLE</option>\r\n              <option value=\"DIVORCED\">DIVORCED</option>\r\n              <option value=\"UNKNOWN\">UNKNOWN</option>\r\n            </Form.Control> \r\n            </p>\r\n            \r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" size=\"lg\" block onClick={this.postJson}>\r\n          SUBMIT\r\n          </Button>\r\n\r\n        </div>\r\n        );\r\n            }\r\n}\r\n\r\nexport default Models;","import React from 'react';\r\nimport \"../App.css\"\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from 'react-router-dom';\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    return(\r\n          \r\n        <Nav className=\"justify-content-start\" variant=\"tabs\"> \r\n            <Nav.Item>\r\n                <Link to=\"/Stats\">\r\n                    <Nav.Link href=\"/Stats\">Stats &nbsp;&nbsp;</Nav.Link>\r\n                </Link>\r\n            </Nav.Item>\r\n            \r\n            <Nav.Item>\r\n                <Link to=\"/Models\">\r\n                    <Nav.Link href=\"#/Models\">Models</Nav.Link>\r\n                </Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n           \r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Stats from './components/Stats';\nimport Models from './components/Models';\nimport Navbar from './components/Navbar';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      pyResp: [],\n      page: 0,\n      legend: 'stats',\n      posted_items: [],\n      is_posted: false,\n\n      age: 50,\n      gender: '',\n      admission_origin: '',\n      admission_type: '',\n      admission_diagnosis: '',\n      admission_procedure: '',\n      insurance: '',\n      religion: '',\n      ethnicity: '',\n      marital_status: '',\n    };\n  }\n\n  fetchData() {\n    console.log(\"fetching python localhost\");\n    fetch('http://127.0.0.1:5000/stats/')\n      .then(r => r.json())\n      .then(res => {\n        console.log(res)\n        this.setState({\n          isLoaded: true,\n          posted_items: res.stats\n        })\n      })\n      .catch(err => console.log(err))\n  }\n  \n  render() {\n    const { error, isLoaded, pyResp, page, legend, age, posted_items, is_posted} = this.state;\n   \n      return(\n        \n        <Router>\n          <Switch>\n            <Container>\n            \n              <Row>\n                <Col>\n                <Navbar />\n                </Col>\n              </Row>\n\n              <Row>\n                <Col>\n                <Route path=\"/Stats\" component={Stats}>\n                    <Stats />\n                  </Route>\n\n                  <Route path=\"/Models\" component={Models}>\n                    <Models new Models/>              \n                  </Route>\n                </Col>\n              </Row>\n\n            </Container>\n          </Switch>\n        </Router>\n      \n      )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}